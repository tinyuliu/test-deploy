{"version":3,"sources":["components/ToDoItem.jsx","components/InputArea.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["ToDoItem","props","useState","isDone","setIsDone","isOver","setIsOver","className","onMouseOver","onMouseOut","style","textDecoration","onClick","event","toDoItem","onCheck","id","display","InputArea","inputText","setInputText","onChange","newValue","target","value","type","onAdd","App","items","setItems","deleteItem","prevItems","filter","item","index","prevValue","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNA8BeA,MA5Bf,SAAmBC,GACf,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAcA,OACI,sBAAKC,UAAU,WAAWC,YAT9B,WACIF,GAAU,IAQ8CG,WAL5D,WACIH,GAAU,IAIV,UACI,oBACAI,MAAO,CAACC,eAAgBR,GAAU,gBAClCS,QAhBR,SAAqBC,GACjBT,GAAWD,IAaP,SAEuBF,EAAMa,WAC7B,wBAAQF,QAAS,WACbX,EAAMc,QAAQd,EAAMe,KACrBN,MAAO,CAACO,SAAUZ,GAAU,QAF/B,mBCAGa,MArBf,SAAoBjB,GAChB,MAAkCC,mBAAS,IAA3C,mBAAOiB,EAAP,KAAkBC,EAAlB,KAOA,OACI,sBAAKb,UAAU,OAAf,UACA,uBAAOc,SAPX,SAAsBR,GAClB,IAAMS,EAAWT,EAAMU,OAAOC,MAC9BJ,EAAaE,IAKkBG,KAAK,OAAOD,MAAOL,IAClD,wBAAQP,QAAS,WACbX,EAAMyB,MAAMP,GACZC,EAAa,KAFjB,SAIE,6CCsBKO,MAlCf,WACE,MAA0BzB,mBAAS,IAAnC,mBAAO0B,EAAP,KAAcC,EAAd,KAQA,SAASC,EAAWd,GAClBa,GAAS,SAAAE,GACP,OAAOA,EAAUC,QAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAUlB,QAKvB,OACE,sBAAKT,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SACE,8CAEF,cAAC,EAAD,CAAWmB,MAnBf,SAAiBP,GACfU,GAAS,SAACM,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBhB,UAkBtB,8BACE,6BACGS,EAAMQ,KAAI,SAACH,EAAMC,GAAP,OACT,cAAC,EAAD,CAAsBlB,GAAIkB,EAAOnB,QAASe,EAAYhB,SAAUmB,GAAjDC,cCnBZG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.99dc9ddf.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nfunction ToDoItem (props) {\n    const [isDone, setIsDone] = useState(false);\n    const [isOver, setIsOver] = useState(false);\n\n    function handleClick(event) {\n        setIsDone(!isDone);\n    }\n\n    function handleMouseOver(){\n        setIsOver(true);\n    }\n\n    function handleMoveout(){\n        setIsOver(false);\n    }\n\n    return (\n        <div className=\"todoItem\" onMouseOver={handleMouseOver} onMouseOut={handleMoveout}>\n            <li \n            style={{textDecoration: isDone && \"line-through\"}} \n            onClick={handleClick}>{props.toDoItem}</li>\n            <button onClick={()=> {\n                props.onCheck(props.id);\n            }} style={{display: !isOver && \"none\"}}>X</button>\n        </div>\n    )\n}\n\nexport default ToDoItem;","import React, {useState} from 'react';\n\nfunction InputArea (props) {\n    const [inputText, setInputText] = useState(\"\");\n\n    function handleChange(event) {\n        const newValue = event.target.value;\n        setInputText(newValue);\n    }\n\n    return (\n        <div className=\"form\">\n        <input onChange={handleChange} type=\"text\" value={inputText} />\n        <button onClick={()=> {\n            props.onAdd(inputText);\n            setInputText(\"\");\n        }}>\n          <span>Add</span>\n        </button>\n      </div>\n    )\n}\n\nexport default InputArea;","import React, { useState } from 'react';\n\nimport ToDoItem from './ToDoItem';\nimport InputArea from './InputArea';\n\nfunction App() {\n  const [items, setItems] = useState([]);\n\n  function addItem(inputText) {\n    setItems((prevValue) => {\n      return [...prevValue, inputText];\n    });\n  }\n\n  function deleteItem(id) {\n    setItems(prevItems=> {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <InputArea onAdd={addItem}/>\n      <div>\n        <ul>\n          {items.map((item, index) => (\n            <ToDoItem key={index} id={index} onCheck={deleteItem} toDoItem={item}/>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}